// <auto-generated />
using System;
using System.Collections.Generic;
using Frigor.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Frigor.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250823091344_OccId")]
    partial class OccId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Frigor.Common.Entities.Habit", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TriggerUuid")
                        .HasColumnType("uuid");

                    b.HasKey("Uuid");

                    b.HasIndex("TriggerUuid");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("Frigor.Common.Entities.Occurrence", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsAchieved")
                        .HasColumnType("boolean");

                    b.HasKey("Uuid");

                    b.ToTable("Occurrence");
                });

            modelBuilder.Entity("Frigor.Common.Entities.Trigger", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<Guid>>("Habits")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<Guid>("OccurrenceUuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Uuid");

                    b.HasIndex("OccurrenceUuid");

                    b.ToTable("Trigger");
                });

            modelBuilder.Entity("Frigor.Common.Entities.User", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Habit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<Guid>>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.HasKey("Uuid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Frigor.Common.Entities.Habit", b =>
                {
                    b.HasOne("Frigor.Common.Entities.Trigger", "Trigger")
                        .WithMany()
                        .HasForeignKey("TriggerUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trigger");
                });

            modelBuilder.Entity("Frigor.Common.Entities.Trigger", b =>
                {
                    b.HasOne("Frigor.Common.Entities.Occurrence", "Occurrence")
                        .WithMany()
                        .HasForeignKey("OccurrenceUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Occurrence");
                });
#pragma warning restore 612, 618
        }
    }
}
