// <auto-generated />
using System;
using Frigor.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Frigor.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250823223025_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Frigor.Common.Entities.Habit", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GodparentUuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerUuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TriggerUuid")
                        .HasColumnType("uuid");

                    b.HasKey("Uuid");

                    b.HasIndex("GodparentUuid");

                    b.HasIndex("OwnerUuid");

                    b.HasIndex("TriggerUuid");

                    b.ToTable("Habits");
                });

            modelBuilder.Entity("Frigor.Common.Entities.Occurrence", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HabitUuid")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAchieved")
                        .HasColumnType("boolean");

                    b.HasKey("Uuid");

                    b.HasIndex("HabitUuid");

                    b.ToTable("Occurrence");
                });

            modelBuilder.Entity("Frigor.Common.Entities.Trigger", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Uuid");

                    b.ToTable("Trigger");

                    b.HasDiscriminator<int>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Frigor.Common.Entities.User", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Uuid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HabitHabitTrigger", b =>
                {
                    b.Property<Guid>("HabitTriggersUuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("HabitsUuid")
                        .HasColumnType("uuid");

                    b.HasKey("HabitTriggersUuid", "HabitsUuid");

                    b.HasIndex("HabitsUuid");

                    b.ToTable("HabitHabitTrigger");
                });

            modelBuilder.Entity("Frigor.Common.Entities.CycleTrigger", b =>
                {
                    b.HasBaseType("Frigor.Common.Entities.Trigger");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int[]>("Weekdays")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("Frigor.Common.Entities.HabitTrigger", b =>
                {
                    b.HasBaseType("Frigor.Common.Entities.Trigger");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Frigor.Common.Entities.Habit", b =>
                {
                    b.HasOne("Frigor.Common.Entities.User", "Godparent")
                        .WithMany()
                        .HasForeignKey("GodparentUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Frigor.Common.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Frigor.Common.Entities.Trigger", "Trigger")
                        .WithMany()
                        .HasForeignKey("TriggerUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Godparent");

                    b.Navigation("Owner");

                    b.Navigation("Trigger");
                });

            modelBuilder.Entity("Frigor.Common.Entities.Occurrence", b =>
                {
                    b.HasOne("Frigor.Common.Entities.Habit", "Habit")
                        .WithMany("Occurrences")
                        .HasForeignKey("HabitUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");
                });

            modelBuilder.Entity("HabitHabitTrigger", b =>
                {
                    b.HasOne("Frigor.Common.Entities.HabitTrigger", null)
                        .WithMany()
                        .HasForeignKey("HabitTriggersUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Frigor.Common.Entities.Habit", null)
                        .WithMany()
                        .HasForeignKey("HabitsUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Frigor.Common.Entities.Habit", b =>
                {
                    b.Navigation("Occurrences");
                });
#pragma warning restore 612, 618
        }
    }
}
